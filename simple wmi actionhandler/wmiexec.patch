--- /usr/bin/wmiexec.py	2015-12-07 10:34:24.000000000 +0000
+++ /usr/bin/wmiexec.py	2015-12-07 10:39:23.435389715 +0000
@@ -112,7 +112,6 @@
         self.__transferClient = smbConnection
         self.__pwd = 'C:\\'
         self.__noOutput = False
-        self.intro = '[!] Launching semi-interactive shell - Careful what you execute\n[!] Press help for extra shell commands'
 
         # We don't wanna deal with timeouts from now on.
         if self.__transferClient is not None:
@@ -257,13 +256,13 @@
 if __name__ == '__main__':
     # Init the example's logger theme
     logger.init()
-    print version.BANNER
 
     parser = argparse.ArgumentParser(add_help = True, description = "Executes a semi-interactive shell using Windows Management Instrumentation.")
     parser.add_argument('target', action='store', help='[[domain/]username[:password]@]<targetName or address>')
     parser.add_argument('-share', action='store', default = 'ADMIN$', help='share where the output will be grabbed from (default ADMIN$)')
     parser.add_argument('-nooutput', action='store_true', default = False, help='whether or not to print the output (no SMB connection created)')
     parser.add_argument('-debug', action='store_true', help='Turn DEBUG output ON')
+    parser.add_argument('-quiet', action='store_true', help='Set loglevel to CRITICAL')
 
     parser.add_argument('command', nargs='*', default = ' ', help='command to execute at the target. If empty it will launch a semi-interactive shell')
 
@@ -290,6 +289,9 @@
     else:
         logging.getLogger().setLevel(logging.INFO)
 
+    if options.quiet is True:
+        logging.getLogger().setLevel(logging.CRITICAL)
+
     import re
     domain, username, password, address = re.compile('(?:(?:([^/@:]*)/)?([^@:]*)(?::([^@]*))?@)?(.*)').match(options.target).groups('')
 
